trigger:
- main
- feature/*

parameters:
  - name: BUILD_TYPE
    displayName: Build Type
    type: string
    default: Release
    values:
    - Release
    - Debug

variables:
  BUILD_TYPE: ${{ parameters.BUILD_TYPE }}
  BUILD_DIRECTORY: $(Build.SourcesDirectory)/build/$(BUILD_TYPE)

stages:

  - stage: Build
    jobs:

    - job: Ubuntu1804_GCC9
      dependsOn: []
      timeoutInMinutes: 10

      pool:
        vmImage: 'ubuntu-18.04'
      
      variables:
        CC: gcc-9
        CXX: g++-9

      steps:
      # - task: CmdLine@2
      #   displayName: 'Install Ninja'
      #   inputs:
      #     script: |
      #       sudo apt install ninja-build
      #       echo 'Ninja Version: '
      #       ninja --version
      - task: CmdLine@2
        displayName: 'Install Conan'
        inputs:
          script: |
            alias python=python3
            python --version
            sudo apt install python3-pip
            pip install conan
            source ~/.profile
            conan --version
      - task: CmdLine@2
        displayName: 'Install FFMPEG'
        inputs:
          script: scripts/install_ffmpeg.sh
      - task: CmdLine@2
        displayName: 'Create Build Directory'
        inputs:
          script: mkdir -p build/$(BUILD_TYPE) && cd build/$(BUILD_TYPE)
      - task: CmdLine@2
        displayName: 'Configure'
        inputs:
          script: 'cmake -G "Ninja" -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) ../..'
          workingDirectory: '$(BUILD_DIRECTORY)'
      - task: CmdLine@2
        displayName: 'Build'
        inputs:
          script: 'cmake --build . --config $(BUILD_TYPE)'
          workingDirectory: $(BUILD_DIRECTORY)
      - task: CmdLine@2
        displayName: 'Run Unit Tests'
        continueOnError: true
        inputs:
          script: 'ctest . --build-config $(BUILD_TYPE) --output-on-failure --timeout 60 -T Test -VV -j10'
          workingDirectory: $(BUILD_DIRECTORY)

    - job: Ubuntu2004_GCC9
      dependsOn: []
      timeoutInMinutes: 10

      pool:
        vmImage: 'ubuntu-20.04'
      
      variables:
        CC: gcc-9
        CXX: g++-9

      steps:
      # - task: CmdLine@2
      #   displayName: 'Install Ninja'
      #   inputs:
      #     script: |
      #       sudo apt install ninja-build
      #       echo 'Ninja Version: '
      #       ninja --version
      - task: CmdLine@2
        displayName: 'Install Conan'
        inputs:
          script: |
            alias python=python3
            python --version
            sudo apt install python3-pip
            pip install conan
            source ~/.profile
            conan --version
      - task: CmdLine@2
        displayName: 'Install FFMPEG'
        inputs:
          script: scripts/install_ffmpeg.sh
      - task: CmdLine@2
        displayName: 'Create Build Directory'
        inputs:
          script: mkdir -p build/$(BUILD_TYPE) && cd build/$(BUILD_TYPE)
      - task: CmdLine@2
        displayName: 'Configure'
        inputs:
          script: 'cmake -G "Ninja" -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) ../..'
          workingDirectory: '$(BUILD_DIRECTORY)'
      - task: CmdLine@2
        displayName: 'Build'
        inputs:
          script: 'cmake --build . --config $(BUILD_TYPE)'
          workingDirectory: $(BUILD_DIRECTORY)
      - task: CmdLine@2
        displayName: 'Test'
        continueOnError: true
        inputs:
          script: 'ctest . --build-config $(BUILD_TYPE) --output-on-failure --timeout 60 -T Test -VV -j10'
          workingDirectory: $(BUILD_DIRECTORY)